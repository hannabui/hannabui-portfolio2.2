{"version":3,"sources":["App.js"],"names":["App","useState","inputText","setInputText","bg","setBg","description","key","completed","fav","tasks","setTasks","addTask","useCallback","keys","map","task","parseInt","maxKey","Math","max","newTask","toString","changeBackground","color","style","styles","container","backgroundColor","innerContainer","title","value","onChangeText","height","paddingBottom","onPress","data","keyExtractor","item","renderItem","listItem","curTask","find","t","checked","textStyle","textDecorationLine","textDeorationStyle","undefined","taskS","selectedTask","addFav","filter","colorsWrapper","colorBox","bgRed","bgOrange","bgPurple","bgBlue","bgYellow","bgGreen","bgWhite","StyleSheet","create","input","flex","flexDirection","lineHeight","marginBottom","fontSize","alignSelf","alignItems","maxWidth","justifyContent","margin","backgrounColor","alignitems","width","marginRight"],"mappings":"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","file":"static/js/app.3f55e443.chunk.js","sourcesContent":["//I chose option 1.1 where I work on two previous projects\n//I've added additional componenets such as:\n//Changing the colors of the to-do list\n//Adding a delete button to delete the to-do list items\n//Added a favorite button to the to-do list items to mark as important\nimport { useCallback, useState } from \"react\";\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from \"react-native\";\nimport { CheckBox, Input, Button } from \"react-native-elements\";\n\nexport default function App() {\n  let [inputText, setInputText] = useState(\"\")\n  let [bg, setBg] = useState(\"\")\n  let [tasks, setTasks] = useState([\n    { description: \"Task 1\", key: \"1\", completed: true, fav:false },\n    { description: \"Task 2\", key: \"2\", completed: false, fav:false },\n    { description: \"Task 3\", key: \"3\", completed: false, fav:false },\n  ])\n  let addTask = useCallback(() => {\n    let keys = tasks.map((task) => parseInt(task.key))\n    let maxKey = Math.max(...keys) + 1;\n    let newTask = {\n      description: inputText,\n      completed: false,\n      key: maxKey.toString(),\n    };\n    setTasks([...tasks, newTask]);\n    setInputText(\"\");\n  }, [inputText]);\n\n  let changeBackground = ((color) => {\n    setBg(color)\n  })\n\n  let deleteItem = ((key) => {\n   setTasks( tasks.filter(task => task.key != key))\n  })\n\n  let addFav = ((taskS) => {\n    let selectedTask= tasks.find(task => task.key ==taskS.key)\n    selectedTask.fav= !selectedTask.fav\n\n   setTasks([...tasks ])\n  })\n\n  return (\n    <View style={[styles.container, {backgroundColor: bg }]}>\n      <View style={styles.innerContainer}>\n        <Text style={styles.title}>TODO APP</Text>\n          <Input\n            value={inputText}\n            onChangeText={setInputText}\n            style={{ height: 30, paddingBottom: 20 }}\n          ></Input>\n          <Button title=\"Add\" onPress={addTask}></Button>\n        <FlatList\n          data={tasks}\n          keyExtractor={(item) => item.key}\n          renderItem={({ item: task }) =>\n            <View style={[styles.listItem, {\n             backgroundColor: task.fav ? 'lightpink':''\n            } ] } >\n              <CheckBox\n              onPress={() => {\n                let curTask = tasks.find(t => t.key == task.key);\n                curTask.completed = !curTask.completed\n                setTasks([...tasks]);\n              }} title={task.description}\n              checked={task.completed}\n              textStyle={ task.completed ? {\n                    textDecorationLine: 'line-through',\n                    textDeorationStyle: 'solid',\n                  } : undefined}\n            ></CheckBox>\n              <Button onPress={()=> addFav(task)} title=\"Fave\"></Button>\n              <Button onPress={()=> deleteItem(task.key)} title=\"Delete\"></Button>\n            </View>\n          } />\n      </View>\n\n      <View style={styles.colorsWrapper}>\n      <TouchableOpacity style={[styles.colorBox, styles.bgRed]} onPress={() => changeBackground(\"#AA4A44\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgOrange]} onPress={() => changeBackground(\"#FF5F15\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgPurple]} onPress={() => changeBackground(\"#702963\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgBlue]} onPress={() => changeBackground(\"#7393B3\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgYellow]} onPress={() => changeBackground(\"#FDDA0D\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgGreen]} onPress={() => changeBackground(\"#8A9A5B\")} ></TouchableOpacity>\n      <TouchableOpacity style={[styles.colorBox, styles.bgWhite]} onPress={() => changeBackground(\"white\")} ></TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    flexDirection: \"row\",\n    lineHeight: 4,\n    paddingBottom: 50,\n    marginBottom: 50,\n  },\n  title: {\n    fontSize: 25,\n    alignSelf: \"center\",\n  },\n  listItem:{\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  innerContainer: {\n    maxWidth: 300,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"auto\",\n  },\n  container: {\n    flex: 1,\n    flexDirection:'row',\n    backgrounColor: \"#fff\",\n    alignitems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  colorsWrapper:{\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"end\"\n  },\n  colorBox:{\n    height: 20,\n    width: 30,\n    marginRight:5\n  },\n  bgRed:{\n    backgroundColor: \"#AA4A44\"\n  },\n  bgOrange: {\n    backgroundColor: \"#FF5F15\"\n  },\n  bgGreen: {\n    backgroundColor: \"#8A9A5B\"\n  },\n  bgPurple: {\n    backgroundColor: \"#702963\"\n  },\n  bgYellow: {\n    backgroundColor: \"#FDDA0D\"\n  },\n  bgBlue: {\n    backgroundColor: \"#7393B3\"\n  },\n  bgWhite: {\n    backgroundColor: \"white\"\n  }\n});"],"sourceRoot":""}